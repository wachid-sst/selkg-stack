version: "3"
services:

  suricata:
    image: suricata-labs:amd-${SURICATA_VERSION:-7.0.2}
    container_name: ${SURICATA_HOSTNAME:-suricata01-labs}
    build:
      dockerfile: ./suricata/Dockerfile-${SURICATA_ARCH:-amd64}
      tags:
        - suricata-labs:amd-${SURICATA_VERSION:-7.0.2}
      args:
        - SURICATA_VERSION=${SURICATA_VERSION:-7.0.2}
        - SURICATA_ARCH=${SURICATA_ARCH:-amd64}
    restart: ${RESTART_MODE:-unless-stopped}
    env_file:
      - ./.env
    environment:
      - SURICATA_OPTIONS=${SURICATA_OPTIONS}
      - SURICATA_VERSION=${SURICATA_VERSION:-7.0.2}
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    network_mode: host
    volumes:
       - ${PWD}/suricata/logs:/var/log/suricata
       - ${PWD}/suricata/suricata-rules:/var/lib/suricata/rules
       - ${PWD}/suricata/suricata-run:/var/run/suricata
       - ${PWD}/suricata/suricata-pid:/var/run/suricata-pid
       - ${PWD}/suricata/etc:/etc/suricata
       - ${PWD}/suricata/suricata-logrotate:/etc/logrotate.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.17.15}
    container_name: ${ELASTIC_HOSTNAME:-es01-labs}
    restart: ${RESTART_MODE:-unless-stopped}
    healthcheck:
      test: ["CMD-SHELL", "curl --user ${ELASTIC_USER:-elastic}:${ELASTIC_PASSWORD:-secret} --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    env_file:
      - ./.env
    environment: 
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTICSEARCH_HOSTS=${ELASTIC_HOSTNAME:-es01-labs}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-secret}
      - xpack.security.enabled=$ELASTIC_SECURITY
    volumes:
      - ${PWD}/elasticsearch/elastic-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - selkg-network
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    container_name: ${LOGSTASH_HOSTNAME:-logstash01-labs}
    image:  logstash-labs:${LOGSTASH_VERSION:-7.17.15}
    build:
      dockerfile: ./logstash/Dockerfile
      tags:
        - "logstash-labs:${LOGSTASH_VERSION:-7.17.15}"
      args:
        - LOGSTASH_VERSION=${LOGSTASH_VERSION:-7.17.15}
    restart: ${RESTART_MODE:-unless-stopped}
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9600 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    env_file:
      - ./.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTIC_HOSTNAME:-es01-labs}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-secret}
      - MONITORING_ENABLED=${LOGSTASH_MONITORING:-false}
    networks:
      - selkg-network
    mem_limit: ${LOGSTASH_MEMORY:-1G}
    volumes:
      - ${PWD}/logstash/logstash-sincedb:/var/lib/logstash/since-db
      - ${PWD}/suricata/logs:/var/log/suricata:ro
      - ${PWD}/logstash/pipeline:/usr/share/logstash/pipeline
      - ${PWD}/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ${PWD}/logstash/templates:/usr/share/logstash/templates

  kibana:
    image: docker.elastic.co/kibana/kibana:${KIBANA_VERSION:-7.17.15}
    container_name: kibana01-labs
    restart: ${RESTART_MODE:-unless-stopped}
    healthcheck:
      test: ["CMD-SHELL", "curl --user ${ELASTIC_USER:-elastic}:${ELASTIC_PASSWORD:-secret} --silent --fail localhost:5601 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    env_file:
      - ./.env
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTIC_SCHEME:-http}://${ELASTIC_HOSTNAME:-es01-labs}:${ELASTIC_PORT:-9200}
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-secret}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: kibana.access
    networks:
      - selkg-network
    ports:
      - "5601:5601"

  fluentd:
    image: fluend-labs:alphine-1.16.1
    container_name: fluentd-labs
    build:
      dockerfile: ./fluentd/Dockerfile-${FLUENTD_ARCH:-amd64}
      tags:
        - "fluend-labs:alphine-1.16.1"
    restart: ${RESTART_MODE:-unless-stopped}
    environment:
      - ELASTICSEARCH_HOSTNAME=${ELASTIC_HOSTNAME:-es01-labs}
      - ELASTICSEARCH_PORT=${ELASTIC_PORT:-9200}
      - ELASTICSEARCH_SCHEME=${ELASTIC_SCHEME:-http}
      - ELASTICSEARCH_USER=${ELASTIC_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD:-secret}
    volumes:
      - ${PWD}/fluentd/conf:/fluentd/etc
      - ${PWD}/fluentd/suricata-logs:/var/log/suricata-logs
    networks:
      - selkg-network
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  evebox:
    container_name: evebox-labs
    image: jasonish/evebox:master
#    command: ["-e", "${ELASTIC_SCHEME:-http}://${ELASTIC_HOSTNAME:-es01-labs}:${ELASTIC_PORT:-9200}"]
    build:
      dockerfile: ./evebox/Dockerfile-${EVEBOX_ARCH:-amd64}
      tags:
        - evebox-labs:amd-0.17.2
      args:
        - EVEBOX_SRC=${EVEBOX_SRC:-./dist/evebox-0.17.2-linux-x64/evebox}
        - EVEBOX_BASE=${EVEBOX_BASE:-amd64/alpine}
    command: ["-c", "/etc/evebox/evebox.yaml", "-vv"]
    restart: ${RESTART_MODE:-unless-stopped}
    environment:
      - EVEBOX_HTTP_TLS_ENABLED=false
      - EVEBOX_AUTHENTICATION_REQUIRED=true
    volumes:
      - ${PWD}/evebox/etc/evebox.yaml:/etc/evebox/evebox.yaml
      - ${PWD}/evebox/var:/var/lib/evebox      
    ports:
      - "5636:5636"
    networks:
      - selkg-network
      
networks:
  selkg-network:
#    external: true
    name: selkg-network
